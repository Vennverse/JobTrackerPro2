# Docker Compose for AutoJobr - Production Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: autojobr-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-autojobr}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - autojobr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Session Storage and Caching
  redis:
    image: redis:7-alpine
    container_name: autojobr-redis-prod
    volumes:
      - redis_data:/data
    networks:
      - autojobr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # AutoJobr Application (Production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autojobr-app-prod
    ports:
      - "80:5000"
      - "443:5000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-autojobr}
      REDIS_URL: redis://redis:6379
      PORT: 5000
      # Production API Keys (set in .env.production)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PRICE_ID: ${STRIPE_PRICE_ID}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET}
      RESEND_API_KEY: ${RESEND_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      # Production Security
      SESSION_SECRET: ${SESSION_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      # Domain and SSL
      DOMAIN: ${DOMAIN:-localhost}
      SSL_ENABLED: ${SSL_ENABLED:-false}
    volumes:
      - uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - autojobr-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional for SSL and Load Balancing)
  nginx:
    image: nginx:alpine
    container_name: autojobr-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - autojobr-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  autojobr-network:
    driver: bridge